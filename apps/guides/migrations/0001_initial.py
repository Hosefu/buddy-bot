# Generated by Django 4.2.16 on 2025-06-14 14:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('flows', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Автоматически устанавливается при создании записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Автоматически обновляется при изменении записи', verbose_name='Дата обновления')),
                ('is_deleted', models.BooleanField(default=False, help_text='Помечает запись как удаленную без физического удаления', verbose_name='Удалено')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Время когда запись была помечена как удаленная', null=True, verbose_name='Дата удаления')),
                ('is_active', models.BooleanField(default=True, help_text='Определяет, активна ли запись в системе', verbose_name='Активно')),
                ('title', models.CharField(help_text='Заголовок статьи', max_length=255, verbose_name='Заголовок')),
                ('slug', models.SlugField(help_text='URL-friendly название статьи', max_length=255, unique=True, verbose_name='URL slug')),
                ('summary', models.TextField(help_text='Краткое описание содержания статьи', max_length=500, verbose_name='Краткое описание')),
                ('content', models.TextField(help_text='Основное содержание статьи в формате Markdown', verbose_name='Содержание')),
                ('article_type', models.CharField(choices=[('guide', 'Руководство'), ('faq', 'FAQ'), ('policy', 'Политика'), ('procedure', 'Процедура'), ('reference', 'Справочник'), ('news', 'Новость')], default='guide', help_text='Тип статьи для организации контента', max_length=20, verbose_name='Тип статьи')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Список тегов для поиска и фильтрации', verbose_name='Теги')),
                ('reading_time_minutes', models.PositiveIntegerField(blank=True, help_text='Приблизительное время чтения статьи', null=True, verbose_name='Время чтения (минуты)')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Начальный'), ('intermediate', 'Средний'), ('advanced', 'Продвинутый')], default='beginner', help_text='Уровень сложности статьи', max_length=20, verbose_name='Уровень сложности')),
                ('is_published', models.BooleanField(default=False, help_text='Опубликована ли статья', verbose_name='Опубликована')),
                ('published_at', models.DateTimeField(blank=True, help_text='Дата и время публикации статьи', null=True, verbose_name='Дата публикации')),
                ('version', models.CharField(default='1.0', help_text='Версия статьи', max_length=20, verbose_name='Версия')),
                ('view_count', models.PositiveIntegerField(default=0, help_text='Общее количество просмотров статьи', verbose_name='Количество просмотров')),
            ],
            options={
                'verbose_name': 'Статья',
                'verbose_name_plural': 'Статьи',
                'db_table': 'articles',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Автоматически устанавливается при создании записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Автоматически обновляется при изменении записи', verbose_name='Дата обновления')),
                ('is_deleted', models.BooleanField(default=False, help_text='Помечает запись как удаленную без физического удаления', verbose_name='Удалено')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Время когда запись была помечена как удаленная', null=True, verbose_name='Дата удаления')),
                ('note', models.TextField(blank=True, help_text='Личная заметка пользователя к закладке', verbose_name='Заметка')),
            ],
            options={
                'verbose_name': 'Закладка статьи',
                'verbose_name_plural': 'Закладки статей',
                'db_table': 'article_bookmarks',
            },
        ),
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Автоматически устанавливается при создании записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Автоматически обновляется при изменении записи', verbose_name='Дата обновления')),
                ('is_deleted', models.BooleanField(default=False, help_text='Помечает запись как удаленную без физического удаления', verbose_name='Удалено')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Время когда запись была помечена как удаленная', null=True, verbose_name='Дата удаления')),
                ('is_active', models.BooleanField(default=True, help_text='Определяет, активна ли запись в системе', verbose_name='Активно')),
                ('name', models.CharField(help_text='Название категории статей', max_length=100, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(help_text='URL-friendly название категории', max_length=100, unique=True, verbose_name='URL slug')),
                ('description', models.TextField(blank=True, help_text='Описание категории', verbose_name='Описание')),
                ('order', models.PositiveIntegerField(default=0, help_text='Порядок отображения категорий', verbose_name='Порядок сортировки')),
            ],
            options={
                'verbose_name': 'Категория статей',
                'verbose_name_plural': 'Категории статей',
                'db_table': 'article_categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ArticleReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Автоматически устанавливается при создании записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Автоматически обновляется при изменении записи', verbose_name='Дата обновления')),
                ('is_deleted', models.BooleanField(default=False, help_text='Помечает запись как удаленную без физического удаления', verbose_name='Удалено')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Время когда запись была помечена как удаленная', null=True, verbose_name='Дата удаления')),
                ('status', models.CharField(choices=[('pending', 'Ожидает рецензии'), ('approved', 'Одобрена'), ('rejected', 'Отклонена'), ('needs_changes', 'Требует изменений')], default='pending', help_text='Статус рецензии', max_length=20, verbose_name='Статус рецензии')),
                ('comments', models.TextField(blank=True, help_text='Комментарии рецензента', verbose_name='Комментарии')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='Дата завершения рецензии', null=True, verbose_name='Дата рецензии')),
            ],
            options={
                'verbose_name': 'Рецензия статьи',
                'verbose_name_plural': 'Рецензии статей',
                'db_table': 'article_reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Автоматически устанавливается при создании записи', verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Автоматически обновляется при изменении записи', verbose_name='Дата обновления')),
                ('is_deleted', models.BooleanField(default=False, help_text='Помечает запись как удаленную без физического удаления', verbose_name='Удалено')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Время когда запись была помечена как удаленная', null=True, verbose_name='Дата удаления')),
                ('reading_time_seconds', models.PositiveIntegerField(blank=True, help_text='Фактическое время чтения статьи пользователем', null=True, verbose_name='Время чтения (секунды)')),
                ('viewed_at', models.DateTimeField(auto_now_add=True, verbose_name='Время просмотра')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_views', to='guides.article', verbose_name='Статья')),
                ('flow_step', models.ForeignKey(blank=True, help_text='Этап потока, в рамках которого была просмотрена статья', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_views', to='flows.flowstep', verbose_name='Этап потока')),
            ],
            options={
                'verbose_name': 'Просмотр статьи',
                'verbose_name_plural': 'Просмотры статей',
                'db_table': 'article_views',
            },
        ),
    ]
