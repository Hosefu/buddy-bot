"""Management command to load demonstration users and flow data"""
from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.db import transaction

from apps.users.models import Role, UserRole
from apps.flows.models import (
    Flow,
    FlowStep,
    Task,
    Quiz,
    QuizQuestion,
    QuizAnswer,
)
from apps.guides.models import Article


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Ç–æ–∫'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...'))
        with transaction.atomic():
            self.create_users()
            self.create_demo_flow()
        self.stdout.write(self.style.SUCCESS('üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã'))

    def create_users(self):
        User = get_user_model()
        roles = {r.name: r for r in Role.objects.all()}

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º email –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è telegram_id, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        users_data = [
            {'email': 'buddy@example.com', 'name': 'Buddy User', 'password': 'buddy123', 'role': 'buddy'},
            {'email': 'user@example.com', 'name': 'Demo User', 'password': 'user123', 'role': 'user'},
            {'email': 'moderator@example.com', 'name': 'Moderator User', 'password': 'moderator123', 'role': 'moderator'},
        ]

        created_count = 0
        for user_data in users_data:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º telegram_id –∏–∑ email, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
            telegram_id = f"demo_{user_data['email'].split('@')[0]}"
            
            user, created = User.objects.get_or_create(
                telegram_id=telegram_id,
                defaults={
                    'email': user_data['email'],
                    'name': user_data['name'],
                }
            )

            if created:
                user.set_password(user_data['password'])
                user.save()
                created_count += 1
                self.stdout.write(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.name} ({user.email}) —Å–æ–∑–¥–∞–Ω.")

            # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å
            role_name = user_data['role']
            if role_name in roles:
                UserRole.objects.get_or_create(user=user, role=roles[role_name])
            else:
                self.stdout.write(self.style.WARNING(f"–†–æ–ª—å '{role_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."))

        self.stdout.write(f'üìä –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {created_count}')

    def create_demo_flow(self):
        flow, created = Flow.objects.get_or_create(
            title='–°–Ω–∞—á–∞–ª–∞ –±—ã–ª–æ Figma',
            defaults={'description': '–¢–µ—Å—Ç–æ–≤—ã–π –æ–±—É—á–∞—é—â–∏–π —Ñ–ª–æ—É –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤-–¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤'}
        )
        if created:
            self.stdout.write(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ—Ç–æ–∫: {flow.title}')

        steps = [
            {
                'title': '–ü—Ä–∏–Ω—è—Ç–∏–µ Figma –∫–∞–∫ –Ω–æ–≤–æ–π —Ä–µ–ª–∏–≥–∏–∏',
                'description': '–¢—ã ‚Äî –Ω–æ–≤—ã–π –¥–∏–∑–∞–π–Ω–µ—Ä. Figma ‚Äî —Ç–≤–æ–π —Ö—Ä–∞–º, –∞–≤—Ç–æ–ª—ç–π–∞—É—Ç ‚Äî –º–∞–Ω—Ç—Ä–∞, –∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ‚Äî —Ç–≤–æ–∏ –±–æ–µ–≤—ã–µ —Ç–æ–≤–∞—Ä–∏—â–∏.',
                'instruction': '–ù–∞–π–¥–∏ –≤ –Ω–∞—à–µ–º Figma-—Ñ–∞–π–ª–µ "–¢–≤–æ–π –ø–µ—Ä–≤—ã–π –º–∞–∫–µ—Ç" —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º —Å –Ω–∞–¥–ø–∏—Å—å—é ¬´üî• –≠—Ç–æ –Ω–µ –∫–Ω–æ–ø–∫–∞, –∞...¬ª. –í–Ω—É—Ç—Ä–∏ —Å–ø—Ä—è—Ç–∞–Ω–æ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ.',
                'code_word': '–ø–µ–ª—å–º–µ–Ω—å',
                'quiz': [
                    {
                        'question': '–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ Figma —Ä–∞–∑—ä–µ—Ö–∞–ª–∏—Å—å?',
                        'answers': [
                            ('–ü–ª–∞–∫–∞—Ç—å', False, '–°–ª—ë–∑—ã ‚Äî –Ω–µ –∞–≤—Ç–æ—Ñ–∏–∫—Å–∞—Ü–∏—è.'),
                            ('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å Mac', False, '–¢—ã –≤ –¥–∏–∑–∞–π–Ω–µ, –∞ –Ω–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ.'),
                            ('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ª—ç–π–∞—É—Ç', True, '–≠—Ç–æ –∏ –µ—Å—Ç—å –ø—É—Ç—å –∫ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—é.'),
                            ('–ü—Ä–∏–∑–≤–∞—Ç—å –ø—Ä–æ–¥–∂–µ–∫—Ç–∞', False, '–û–Ω –Ω–µ UX-—ç–∫–∑–æ—Ä—Ü–∏—Å—Ç.'),
                            ('–°–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é', False, '–ù–µ –±–µ–≥–∏ –æ—Ç –ø—Ä–æ–±–ª–µ–º—ã ‚Äî –±–µ–≥–∏ –∫ –∞–≤—Ç–æ–ª—ç–π–∞—É—Ç—É!'),
                        ],
                    },
                    {
                        'question': '–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è Frame –æ—Ç Group?',
                        'answers': [
                            ('Frame –ø–ª–∞—Ç–Ω—ã–π, Group –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π', False, '–í—Å—ë –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –≤ Figma ‚Äî –¥–æ –ª–∏–º–∏—Ç–∞.'),
                            ('Frame ‚Äî —ç—Ç–æ –∫–∞–∫ div, Group ‚Äî –∫–∞–∫ span', True, '–ü–æ—á—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥, —Ç–æ–ª—å–∫–æ –∫—Ä–∞—Å–∏–≤–æ.'),
                            ('Frame –º–∏–≥–∞–µ—Ç –ø—Ä–∏ –∫–ª–∏–∫–µ', False, '–≠—Ç–æ –±–∞–≥, –∞ –Ω–µ —Ñ–∏—á–∞.'),
                            ('Group —É–¥–∞–ª—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å VPN', False, 'VPN —Ç—É—Ç –≤–æ–æ–±—â–µ –ø—Ä–∏ —á—ë–º?'),
                            ('Group –¥–µ–ª–∞–µ—Ç –∫–æ—Ñ–µ', False, '–£–≤—ã.'),
                        ],
                    },
                ],
            },
            {
                'title': '–î–∞ –∫—Ç–æ –≤—Å–µ —ç—Ç–∏ –ª—é–¥–∏ –≤ Slack?',
                'description': 'Slack ‚Äî –Ω–µ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä, –∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å–µ—Ä–∏–∞–ª.',
                'instruction': '–ù–∞–π–¥–∏ –≤ –∫–∞–Ω–∞–ª–µ #design-humor –º–µ–º —Å –∫–æ—Ç–æ–º, —Å—Ç–æ—è—â–∏–º –ø–µ—Ä–µ–¥ –º–æ–Ω–∏—Ç–æ—Ä–æ–º —Å –ø–æ–¥–ø–∏—Å—å—é "–ö–æ–≥–¥–∞ –æ–ø—è—Ç—å –ø—Ä–∞–≤–∫–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞". –í Alt-—Ç–µ–∫—Å—Ç–µ –º–µ–º—á–∏–∫–∞ —Å–∫—Ä—ã—Ç–æ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ.',
                'code_word': '–¥–µ–¥–ª–∞–π–Ω',
                'quiz': [
                    {
                        'question': '–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç ¬´+1¬ª –≤ Slack?',
                        'answers': [
                            ('–•–æ—á—É –±—ã—Ç—å —á–∞—Å—Ç—å—é —ç—Ç–æ–≥–æ', True, '–¢–∞–∫ –º—ã –≥–æ–≤–æ—Ä–∏–º ¬´—è —Ç–æ–∂–µ¬ª.'),
                            ('–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞', False, '–≠—Ç–æ –Ω–µ –æ–Ω–ª–∞–π–Ω-–∏–≥—Ä–∞.'),
                            ('–≠—Ç–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', False, '–ü–æ—á—Ç–∏, –Ω–æ –Ω–µ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ.'),
                            ('–¢–µ–±—è –ª–∞–π–∫–Ω—É–ª–∏', False, '–î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å emoji.'),
                            ('–û—à–∏–±–∫–∞ HR', False, 'HR —Ç—É—Ç –≤–æ–æ–±—â–µ –Ω–µ –ø—Ä–∏—á—ë–º.'),
                        ],
                    },
                    {
                        'question': '–ó–∞—á–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å üßµ (—Ç—Ä–µ–¥)?',
                        'answers': [
                            ('–ß—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç—ã —É–º–Ω—ã–π', False, '–£–º –ø–æ–∫–∞–∑–∞–Ω –¥–µ–ª–∞–º–∏.'),
                            ('–ß—Ç–æ–±—ã –Ω–µ –∑–∞—Ö–ª–∞–º–ª—è—Ç—å –∫–∞–Ω–∞–ª', True, '–ò—Å—Ç–∏–Ω–Ω–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ.'),
                            ('–ß—Ç–æ–±—ã —Å–ø—Ä—è—Ç–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—É—é –∞–≥—Ä–µ—Å—Å–∏—é', False, '–ù–æ —É–¥–æ–±–Ω–æ.'),
                            ('–¢–∞–∫ –≥–æ–≤–æ—Ä—è—Ç —Å—Ç–∞—Ä—à–∏–µ –¥–∏–∑–∞–π–Ω–µ—Ä—ã', False, '–ò —Ç—ã –≥–æ–≤–æ—Ä–∏! –ù–æ —Å —É–º–æ–º.'),
                            ('–≠—Ç–æ –º–æ–¥–Ω–æ', False, '–ù–µ –≤—Å—ë –º–æ–¥–Ω–æ–µ ‚Äî –ø–æ–ª–µ–∑–Ω–æ.'),
                        ],
                    },
                ],
            },
            {
                'title': '–§–∞–π–ª–æ–æ–±–º–µ–Ω –∏ –ø–æ–∏—Å–∫–∏ ¬´–ø–æ—Å–ª–µ–¥–Ω—è—è_–≤–µ—Ä—Å–∏—è_—Ñ–∏–Ω–∞–ª_v3(–∫–æ–ø–∏—è)_–ø—Ä–∞–≤–∫–∏¬ª',
                'description': 'Google Drive –∏ Notion ‚Äî —ç—Ç–æ —Ü–∏—Ñ—Ä–æ–≤–æ–π —à–∫–∞—Ñ —Å –º–∏–ª–ª–∏–æ–Ω–æ–º —è—â–∏–∫–æ–≤.',
                'instruction': '–í Notion-–¥–æ–∫–µ "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ –º–∞–∫–µ—Ç–æ–≤" –Ω–∞–π–¥–∏ —Å–Ω–æ—Å–∫—É —Å –Ω–∞–¥–ø–∏—Å—å—é "P.S. –ú—ã –≤–∞—Å –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª–∏". –†—è–¥–æ–º –±—É–¥–µ—Ç –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ.',
                'code_word': '—Ä–µ—Ñ–µ—Ä–µ–Ω—Å',
                'quiz': [
                    {
                        'question': '–ö–∞–∫ –ø–æ–Ω—è—Ç—å, —á—Ç–æ —ç—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ñ–∞–π–ª–∞?',
                        'answers': [
                            ('–¢–∞–º –Ω–∞–ø–∏—Å–∞–Ω–æ ¬´—Ñ–∏–Ω–∞–ª¬ª', False, '–û–±–º–∞–Ω—á–∏–≤–æ.'),
                            ('–≠—Ç–æ —Å–∞–º–∞—è –≤–µ—Ä—Ö–Ω—è—è –≤–µ—Ä—Å–∏—è', False, '–¢–∞–º –º–æ–∂–µ—Ç –±—ã—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫.'),
                            ('–§–∞–π–ª –∑–∞–ª–∏—Ç –≤ –æ–±—â–∏–π —á–∞—Ç', True, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ ‚Äî —ç—Ç–æ –æ–Ω.'),
                            ('–¢—ã —Ç–∞–∫ —á—É–≤—Å—Ç–≤—É–µ—à—å', False, '–ò–Ω—Ç—É–∏—Ü–∏—è ‚Äî –Ω–µ –ø–∞–ø–∫–∞.'),
                            ('–£–∫–∞–∑–∞–ª –∞—Ä—Ç–¥–∏—Ä', False, '–ê –æ–Ω —Å–∞–º –≤ Notion –≤–µ—Ä–∏—Ç?'),
                        ],
                    },
                    {
                        'question': '–ì–¥–µ —Ö—Ä–∞–Ω–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å—ã?',
                        'answers': [
                            ('–í Telegram', False, '–£–ª–µ—Ç–∏—Ç –≤–º–µ—Å—Ç–µ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º.'),
                            ('–í –≥–æ–ª–æ–≤–µ', False, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–∫–∏.'),
                            ('–í Notion –∏–ª–∏ Drive', True, '–¢–æ–ª—å–∫–æ —Å –ø–æ–Ω—è—Ç–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º.'),
                            ('–í —á–∞—Ç–∏–∫–µ', False, '–ü–æ—Ç–µ—Ä—è–µ—Ç—Å—è –ø–æ–¥ –≥–∏—Ñ–∫–∞–º–∏.'),
                            ('–í Figma-—Ñ–∞–π–ª–µ', False, '–¢–∞–º ‚Äî –º–∞–∫–µ—Ç—ã, –∞ –Ω–µ –º—É–∑–µ–π.'),
                        ],
                    },
                ],
            },
        ]

        for order, step_data in enumerate(steps, start=1):
            step, created_step = FlowStep.objects.get_or_create(
                flow=flow,
                order=order,
                defaults={
                    'title': step_data['title'],
                    'description': step_data['description'],
                },
            )
            if created_step:
                self.stdout.write(f'  ‚Ä¢ –≠—Ç–∞–ø {order} —Å–æ–∑–¥–∞–Ω')

            Article.objects.get_or_create(
                flow_step=step,
                defaults={
                    'title': step_data['title'],
                    'content': step_data['description'],
                    'is_published': True,
                },
            )

            task, _ = Task.objects.get_or_create(
                flow_step=step,
                defaults={
                    'title': step_data['title'],
                    'description': step_data['description'],
                    'instruction': step_data['instruction'],
                    'code_word': step_data['code_word'],
                },
            )

            quiz, _ = Quiz.objects.get_or_create(
                flow_step=step,
                defaults={'title': f'–ö–≤–∏–∑: {step_data["title"]}'},
            )

            for q_order, q in enumerate(step_data['quiz'], start=1):
                question, _ = QuizQuestion.objects.get_or_create(
                    quiz=quiz,
                    order=q_order,
                    defaults={'question': q['question']},
                )
                for a_order, (text, correct, expl) in enumerate(q['answers'], start=1):
                    QuizAnswer.objects.get_or_create(
                        question=question,
                        order=a_order,
                        defaults={
                            'answer_text': text,
                            'is_correct': correct,
                            'explanation': expl,
                        },
                    )

        self.stdout.write('üìö –ü–æ—Ç–æ–∫ –∏ —ç—Ç–∞–ø—ã –≥–æ—Ç–æ–≤—ã')
