version: '3.8'

# Общие настройки для всех сервисов
x-app-common: &app-common
  build: 
    context: .
    dockerfile: Dockerfile
  restart: unless-stopped
  networks:
    - app-network
  volumes:
    - .:/app
    - logs_volume:/app/logs

# Общие переменные окружения
x-app-environment: &app-environment
  # Django settings
  DJANGO_SETTINGS_MODULE: onboarding.settings
  SECRET_KEY: django-insecure-development-key-change-in-production
  DEBUG: "True"
  ALLOWED_HOSTS: "localhost,127.0.0.1,0.0.0.0,web"
  
  # Database
  DB_NAME: onboarding
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_HOST: db
  DB_PORT: 5432
  
  # Redis
  REDIS_URL: redis://redis:6379/1
  CELERY_BROKER_URL: redis://redis:6379/0
  CELERY_RESULT_BACKEND: redis://redis:6379/0
  
  # Telegram (заполнить реальными значениями)
  TELEGRAM_BOT_TOKEN: "7578591054:AAGaFxPZXWqdVSWIhnfby-cIehnVEiX8GYU"
  TELEGRAM_WEBHOOK_URL: ""
  TELEGRAM_MINI_APP_URL: ""
  
  # CORS
  CORS_ALLOWED_ORIGINS: "http://localhost:3000,http://127.0.0.1:3000"
  CORS_ALLOW_ALL_ORIGINS: "True"
  
  # Admin credentials
  ADMIN_EMAIL: "admin@example.com"
  ADMIN_PASSWORD: "admin123"
  ADMIN_NAME: "Администратор"
  
  # Демо-данные
  LOAD_DEMO_DATA: "true"

services:
  # База данных PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: onboarding
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d onboarding"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  # Redis для кеширования и Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app