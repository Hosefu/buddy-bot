services:
  # База данных PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis для кеширования и Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Django приложение
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: ["web"]

  # Frontend Vite dev server
  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.example
    depends_on:
      - web
    restart: unless-stopped

  # Celery worker для фоновых задач
  celery-worker:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - logs_volume:/app/logs
    env_file:
      - .env
    depends_on:
      - web
      - redis
    restart: unless-stopped
    command: ["celery-worker"]

  # Celery beat (планировщик задач)
  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - logs_volume:/app/logs
    env_file:
      - .env
    depends_on:
      - web
      - redis
    restart: unless-stopped
    command: ["celery-beat"]

  # Nginx (для production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/static:ro
      - media_volume:/media:ro
    depends_on:
      - web
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  logs_volume: